# Chunk 1
library(readr)
score_train <- read_table2("score_train.txt")
str(score_train)
names(score_train)<-c("adherencia",
paste("x", 1:5, sep=""))
# Chunk 2
score_train$adhind<-factor(ifelse(score_train$adherencia==TRUE, "1","0"))
score<-glm(adhind ~ ., family = binomial,data = score_train[,-1])
summary(score)  #Todas las variables son significativas
# Chunk 3
library(readr)
score_test <- read_table2("score_test.txt")
names(score_test)<-c("adherencia",
paste("x", 1:5, sep=""))
# Chunk 4
distancecorner <- function (x, y) {
sqrt(((1-x)^2 + (1-y)^2)) }
x <- seq(0, 1, length= 30)
y <- x
z <- outer(x, y, distancecorner)
persp(x, y, z, main="Distance to corner y punto óptimo",
zlab = "Distance ro Corner", xlab="Especificidad",
ylab="Sensibilidad",
theta = -20, phi = 0, col = "orchid", shade = 0.5, d=0.1)
# Chunk 5
score_test$adhind<-factor(ifelse(score_test$adherencia==TRUE, "1","0"))
Matrix<-cbind(score_test[, 2:6])
pred<-exp(coef(score)[1]+coef(score)[2]*Matrix[,2]+
coef(score)[3]*Matrix[,3]+coef(score)[4]*Matrix[,4]+
coef(score)[5]*Matrix[,5])/(1+exp(coef(score)[1]+
coef(score)[2]*Matrix[,2]+
coef(score)[3]*Matrix[,3]+coef(score)[4]*Matrix[,4]+
coef(score)[5]*Matrix[,5]))
#Tomaré una secuencia del punto de corte
secuencia<-seq(0,1, by=0.005)
Sens<-rep(0, length(secuencia))
Esp<-rep(0, length(secuencia))
for(i in 1:length(secuencia)){
values<-factor(ifelse(pred<secuencia[i], "0","1"))
datos<-as.vector(table(values,score_test$adhind))
Sens[i]<-datos[4]/(datos[4]+datos[3])
Esp[i]<-datos[1]/(datos[1]+datos[2])}
d<-cbind(secuencia, Sens, Esp, sqrt((1-Sens)^{2}+(1-Esp)^{2}))
colnames(d)<-c("d","Sensibilidad","Especificidad", "Corner")
head(d[order(d[,4]),],10)
d[which(d[,4]==min(d[,4], na.rm=TRUE)),] #Se pudiera elegir cualquiera
(puntodecorte<-unname(d[which.min(d[,4]),1]))
# Chunk 6
score_test$Decision<-factor(ifelse(pred<puntodecorte, "0","1"))
# 0: No se entrega programa si prob<punto de corte
# 1: Se otorgara programa si prob>= punto de corte
head(score_test)
table(score_test$Decision)
#De los 300 pacientes a 160 se le otorga el programa.
write.csv(score_test, "score_test2.csv", row.names = FALSE)
#Base de datos con decision
library(tinytex)
